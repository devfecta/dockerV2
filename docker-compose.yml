version: '3.9'
services:
  DevFecta-NGINX:
    image: nginx:stable
    restart: always
    container_name: DevFecta-NGINX
    volumes:
      - type: bind
        source: ./build
        target: /usr/share/nginx/html
      - type: bind
        source: ./nginx.conf
        target: /etc/nginx/nginx.conf
    #environment:
    #- VIRTUAL_HOST=com.localhost
    #- VIRTUAL_PORT=80
    #- LETSENCRYPT_HOST=your-website-one.com 
    #- LETSENCRYPT_EMAIL=your.email@domain.com
    #deploy:
    #  replicas: 2
    #  update_config:
    #    parallelism: 2
    #    delay: 10s
    #  restart_policy:
    #    condition: on-failure
    networks:
      - frontend
    ports:
      - "81:80"
    expose:
    - 80
    depends_on:
      - DevFecta-MongoDb

  DevFecta-MongoDb:
    image: mongo:latest
    container_name: DevFecta-MongoDb
    hostname: mongodb
    restart: always
    volumes: 
      - /d/MongoDB/data/db:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      #- type: bind
      #  source: /d/MongoDB/data/db
      #  target: /data/db
      - type: bind
        source: ./docker/mongod.conf
        target: /etc/mongod.conf
      #- type: bind
      #  target: ./docker/initdb.d
      #  source: /docker-entrypoint-initdb.d
    networks:
      - frontend
    env_file:
      - .env
    environment:
      - ROOT_URL=http://mongodb
      - MONGO_URL=mongodb://mongodb:27017
      #- MONGO_INITDB_DATABASE=test1
      #- MONGO_INITDB_ROOT_USERNAME=root
      #- MONGO_INITDB_ROOT_PASSWORD=M3t@llica
    ports:
      - "27017:27017"
    #networks:
      #- host
    #command: ["-f", "/etc/mongod.conf"]
    

networks:
  frontend:
  #host:

#volumes:
#  mongodb_data_container:
#  devfecta-nginx-volume:
#    name: devfecta-nginx
    